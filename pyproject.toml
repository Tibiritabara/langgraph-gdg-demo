[project]
name = "gdg-demo"
version = "0.1.0"
description = "From Zero to Hero: A guide to building agents and multi-agent systems"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "ariadne-codegen>=0.14.0",
    "langchain-anthropic>=0.3.8",
    "langchain-experimental>=0.3.4",
    "langchain-ollama>=0.2.3",
    "langchain-openai>=0.3.6",
    "langgraph>=0.2.73",
    "pandas>=2.2.3",
    "pydantic>=2.10.6",
    "pydantic-settings>=2.7.1",
]

[dependency-groups]
dev = ["jupyterlab>=4.3.5", "pyright>=1.1.394", "ruff>=0.9.6"]

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "gql",
]

# Assume Python 3.12
target-version = "py312"

lint.select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
    "UP", # pyupgrade
]

lint.ignore = [
    "E501", # line too long, handled by black
    "B008", # do not perform function calls in argument defaults
    "C901", # too complex
    "W191", # indentation contains tabs
]

[tool.ruff.lint.isort]
known-third-party = ["pydantic"]

[tool.pyright]
typeCheckingMode = "standard"
pythonVersion = "3.12"
reportMissingImports = "error"
reportMissingTypeStubs = false
exclude = ["**/__pycache__"]
include = ["./src"]

[tool.ariadne-codegen]
remote_schema_headers = { "Authorization" = "$GITHUB_PAT" }
remote_schema_url = "https://api.github.com/graphql"
queries_path = "./src/queries/"
target_package_path = "./src/services/"
target_package_name = "gql"
async_client = false
